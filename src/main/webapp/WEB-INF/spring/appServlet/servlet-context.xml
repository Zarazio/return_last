<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/**/**" location="/resources/**/" />
	<resources mapping="/**/**/**" location="/resources/**/**/**" />
	<resources mapping="/**/**/**/**" location="/resources/**/**/**/**" />
	<!-- js경로 설정  -->
	<!-- <resources mapping="/js/**" location="/resources/js/" /> -->
	<!-- <resources mapping="/js/**/**" location="/resources/js/**/**" /> -->
 
 
 	<!-- JsonView configuration -->
   <beans:bean id="beanNameResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
      <beans:property name="order" value="0" />
   </beans:bean> 
 
	<!-- Tiles configuration // 서블릿 타일즈 설정 (pom.xml 라이브러리 필요) -->
    <beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
        <beans:property name="order" value="1"/>
    </beans:bean>
 
    <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <beans:property name="definitions">
            <beans:list>
                 <beans:value>/WEB-INF/tiles/tiles-layout.xml</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean> 
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2"/>
	</beans:bean>
	
	<!-- multipartResolver를 사용하기 위한 빈설정  -->
	<!-- imgscalr-lib, commons-fileupload 라이브러리 추가  -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10485760"></beans:property>
	</beans:bean>
	
	<!-- 장소이미지경로설정 // 경로재설정 이미지가 저장된 폴더 upload -->
	<beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value="resources/upload">
		</beans:constructor-arg>
	</beans:bean>
	
	<!-- 프로필이미지경로 // 경로재설정 이미지가 저장된 폴더 upload/profile -->
	<beans:bean id="profilePath" class="java.lang.String">
		<beans:constructor-arg value="resources/upload/profile">
		</beans:constructor-arg>
	</beans:bean>
	
	<!-- 로그 이미지경로 // 경로재설정 이미지가 저장된 폴더 upload/logs -->
	<beans:bean id="logsPath" class="java.lang.String">
		<beans:constructor-arg value="resources/upload/logs">
		</beans:constructor-arg>
	</beans:bean>

	<!-- gif이미지경로설정 // 경로재설정 이미지가 저장된 폴더 upload -->
	<beans:bean id="gifPath" class="java.lang.String">
		<beans:constructor-arg value="/resources/upload/gif">
		</beans:constructor-arg>
	</beans:bean>
	<beans:bean id="resultgifPath" class="java.lang.String">
		<beans:constructor-arg value="/resources/upload/gif/resultgif">
		</beans:constructor-arg>
	</beans:bean>
	
	<!-- 커뮤니티 이미지경로 // 경로재설정 이미지가 저장된 폴더 upload/logs -->
	<beans:bean id="comunityPath" class="java.lang.String">
		<beans:constructor-arg value="resources/upload/comunity">
		</beans:constructor-arg>
	</beans:bean>
	
	<!-- 스텝로그 kml 경로  -->
	<beans:bean id="stepPath" class="java.lang.String">
		<beans:constructor-arg value="resources/upload/step_log">
		</beans:constructor-arg>
	</beans:bean>

	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<context:component-scan base-package="zara.zio.turn" />
	
</beans:beans>
