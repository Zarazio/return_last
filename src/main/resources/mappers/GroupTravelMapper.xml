<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zara.zio.groupTravelMapper">

   <!-- Group 단  -->
   <select id="friendList" resultType="MemberVO">
       	select user_profile , user_id from user_info 
      	where user_id in
      	(select  CONCAT(replace(user_id,#{user_id},'') , replace(friend_id,#{user_id},'') ) as friend_id from friend_list where user_id=#{user_id} or friend_id=#{user_id} and friend_accept = 1)                
   </select>
   
   <insert id="group_insert">
        insert into travel_group (travel_Title, start_Date, end_Date)
      	values(#{travel_Title}, #{start_Date} , #{end_Date})
   </insert>
   
   <select id="groupCode" resultType="int">
   		select max(group_Code) from travel_group ;
   </select>
    
   <insert id="groupApplicationCreate">
      	insert into group_application (user_id, group_Code, group_apply, invite_user)
      	values(#{user_id} , #{group_Code}, 1 , #{invite_user})
   </insert>
      
   <!-- Travel 단  -->
    
   <select id="travel_place" resultType="int">
       	select count(*) from travel_list where travel_Date = #{travel_Date} and  group_Code = #{group_Code}  
   </select>
    
   <insert id="planList_insert">
      	insert into travel_list (travel_Date, place_code, group_Code, travel_Priority)
      	values(#{travel_Date}, #{place_code} , #{group_Code} , #{travel_Priority})
   </insert>
   
   <select id="planDayList" resultType="TravelListVO">
     	select b.place_code, b.travel_Priority , a.place_lat AS place_lat, a.place_lng , c.place_img , a.place_name
    	from place_tbl a , travel_list b, pimg_tbl c
    	where a.place_code = b.place_code 
    	and a.place_code = c.place_code 
    	and b.group_Code=#{group_Code} 
    	and travel_Date=#{travel_Date}
    	and c.img_code = 0;
   </select>
   
   <update id="planPriority">
     	update travel_list set travel_Priority=#{count} 
     	where travel_Date = #{travel_Date} 
     	and group_Code = #{group_Code} 
     	and place_code = #{place_code}
     	and travel_Priority = #{travel_Priority}
     	order by travel_Priority
   </update>
   
   <delete id="planDelete">
     	delete from travel_list where travel_Date = #{travel_Date} 
     	and group_Code = #{group_Code} 
     	and place_code = #{place_code}
   </delete>
   
   <select id="planRealTimePriority" resultType="TravelListVO">
       	select place_code, travel_Priority from travel_list 
       	where travel_Date = #{travel_Date} 
       	and group_Code = #{group_Code} 
   </select>
   
   <select id="material_list" resultType="MaterialVO">
       	select material_code, user_id, group_Code, material_name, material_type, manager_check
       	from material
       	where (group_Code = #{group_Code}) and user_id = #{user_id} or manager_check = 1
   </select>
   
   <insert id="material_insert">
       	insert into material (user_id, group_Code, material_name, material_type,manager_check)
       	values( #{user_id}, #{group_Code} ,#{material_name}, "개인", #{manager_check})
   </insert>
   
   <select id="material_code" resultType="int">
       	select material_code
       	from material 
       	where user_id = #{user_id} and material_name = #{material_name} and  (group_Code = #{group_Code} )
       	union
       	select material_code from material
       	where material_name = #{material_name} and group_Code = 0 
   </select>
   
   <insert id="material_check">
       	insert into material_check 
       	values(#{group_Code}, #{user_id} , #{material_code})
   </insert>
    
   <select id="material_checked" resultType="MaterialVO">
       	select material_code from material_check where group_Code = #{group_Code} and user_id = #{user_id}
   </select>
   
   <delete id="deleteCheckMaterial">
       	delete from material_check where user_id = #{user_id} and group_Code = #{group_Code} and material_code = #{material_code}
   </delete>
   
   <delete id="materialDelete">
       	delete from material where user_id = #{user_id} and group_Code = #{group_Code} and material_code = #{material_code}
   </delete>
   
   <update id="limit_cost_update">
   		update travel_group set coin_Limit = #{coin_limit} , sc_Division = #{sc_Division} where group_Code = #{group_Code}
   </update>
   
   <select id="chattingList" resultType="ChattingVO">
   		select * from chatting where group_Code = #{group_Code} ;
   </select>
   
   <insert id="chattingStore">
   		insert into chatting (group_Code, chatting_content, user_id, chatting_date)
   		values (#{group_Code} , #{chatting_content} , #{user_id}, #{chatting_date})
   </insert>
</mapper>